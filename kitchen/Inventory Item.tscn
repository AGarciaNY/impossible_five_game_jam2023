[gd_scene load_steps=4 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.20984, 0.207291, 0.253906, 1 )

[sub_resource type="VisualShader" id=2]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.209840, 0.207291, 0.253906);
	float n_out2p1 = 1.000000;

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 180, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1 )

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )

[node name="Inventory Item" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( -67.5526, 36.3993 )
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="."]
margin_right = 40.0
margin_bottom = 40.0
size_flags_horizontal = 3
size_flags_vertical = 3
stretch_mode = 4
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="TextureRect"]
show_behind_parent = true
material = SubResource( 3 )
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}
